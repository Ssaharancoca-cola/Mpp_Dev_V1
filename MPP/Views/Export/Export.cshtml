@model List<Model.Entity_Type_Attr_Detail>


<script src="~/js/Export.js"></script>

<form id="formid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb rounded-3">
            @if (Context.Session.GetString("SelectedDimensionData") != null && Context.Session.GetString("EntityName") != null)
            {
                <li class="breadcrumb-item">
                    <a class="link-body-emphasis" href="#">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house-door" viewBox="0 0 16 16">
                            <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4z" />
                        </svg>
                        <span class="visually-hidden">Home</span>
                    </a>
                </li>
                @if (Context.Session.GetString("SelectedDimensionData") != null && Context.Session.GetString("EntityName") != null)
                {
                    <li class="breadcrumb-item">
                            <a class="link-body-emphasis fw-semibold text-decoration-none" href="#">@Context.Session.GetString("SelectedDimensionData").ToString() ></a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">
                        @Context.Session.GetString("EntityName").ToString()
                    </li>
                }
            }
        </ol>
    </nav>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
        <h1 class="h2">Export</h1>
        
    </div>
    <div class="card box-shadow">
        <div class="card-header">
            <h5 class="mb-0">Export</h5>            
        </div>
        <div class="card-body">
            
            <div class="wrapper-export">
                @* <p>Please select fields below which you want to export:</p> *@
                <div class="form-group">
                    <label id="lblSelectAll" CssClass="label-select-all">Select All </label>
                    <span>:</span>
                    @Html.CheckBox("chkSelectAll", new { @class = "chkSelectAll" })
                </div>
                @foreach (var menuOption in Model)
                {

                    if (@menuOption.Isvisible != "N")
                    {
                        <div class="form-group">
                            
                                <label id=@menuOption.AttrName CssClass="editlabel">
                                    @menuOption.AttrDisplayName 
                                </label>
                            <span>:</span>
                            
                           
                                @if (@menuOption.AttrDataType == "SUPPLIED_CODE")
                                {
                                    @Html.CheckBox(@menuOption.AttrName, new { @class = "checkbox", @checked = true, @disabled = true })
                                }
                                else
                                {
                                    @Html.CheckBox(@menuOption.AttrName, new { @class = "label" })
                                }

                            
                        </div>
                    }
                }
                <div class="form-group">
                    <label id="lblEffectiveDate" CssClass="editlabel">Effective Date </label>
                    
                    @Html.CheckBox("DATE_FROM", new { @class = "label" })
                </div>
                <div class="ctn-export">
                    <button type="submit" class="btn btn-primary" id="btnExport" name="Command" value="Export">Export</button>
                    <button type="submit" class="btn btn-outline-primary" id="btnCancel" name="Command" value="Cancel">Cancel</button>
                </div>                
            </div>
        </div>
    </div>
    
    <table style="width:100%;padding-top:10px;" border="0" cellpadding="0" cellspacing="0">
        <tr align="center" style="width: 100%">
            <td style="width: 50%" align="right"></td>
            <td style="width: 50%" align="left">
                

            </td>

        </tr>
        <tr align="center" style="width:100%">
            <td colspan="2" style="width:100%" align="center">

                <div id="divLoading" class="loader">

                    <img alt="Loading, please wait" style="position: absolute; top: 30%; left: 45%; width:110px; height:110px" src="~/Images/spinner.gif" />

                </div>
            </td>
        </tr>

    </table>
    <input type="hidden" id="cmdName" name="cmdName" value="AttributeDetail" />
</form>

<script>
    $(document).ready(function () {
        $("#btnCancel").click(function () {
            $('#AttributeDetail').html();
            $('#viewPlaceHolder').html();

        });
        $("#chkSelectAll").change(function () {
            var status = this.checked; // "select all" checked status
            $('.label').each(function () { //iterate all listed checkbox items
                this.checked = status; //change ".label" checked status
            });
        });
        $('.label').change(function () {
            if (this.checked === false) {
                $('#chkSelectAll')[0].checked = false;
            } else {
                // Check if all other checkboxes are checked
                if ($('.label:checked').length === $('.label').length) {
                    $('#chkSelectAll')[0].checked = true;
                }
            }
        });
    });
    $('#formid').on('submit', submitFormWithAjax);
    function onBegin() {
        $('#divLoading').show();

    }
    function onSuccess(result, FilePath) {
        if (result.indexOf("error") == 0) {
            alert(result.replace("error", ""));
        }
        if (result.indexOf("export") == 0) {

           // window.location.href = 'MPP/Export/Download?path=' + result;

            window.location.href = 'Export/Download?path=' + result;            
        }
        else {
            $('#AttributeDetail').empty();
            $('#viewPlaceHolder').empty();

            $('#AttributeDetail').html(result);
        }
    }
    function onFailure(error) {
        alert(error);

    }
    function onComplete() {
        $('#divLoading').hide();
    }
    function onBegin() {

        $('#divLoading').show();

    }
    function onComplete() {
        $('#divLoading').hide();
    }

    function submitFormWithAjax(event) {
        event.preventDefault();
        let commandValue = $(document.activeElement).attr("value");
        // Declare an object to store the form data
        let form = {};
        // Loop through form elements and collect the data
        $('#formid input, #formid select').each(function () {
            if ($(this).attr('type') === 'checkbox') {
                form[$(this).attr('name')] = $(this).prop('checked');
            }
        });
        form['Command'] = commandValue;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ExportData", "Export")',
            data: form,
            success: function (data) {
                // Update your DOM based on the received data.
                onSuccess(data);
            },
            error: function (err) {
                onFailure(error);
            }
        });
    }

</script>
