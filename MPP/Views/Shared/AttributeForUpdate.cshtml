@model List<Model.Entity_Type_Attr_Detail>

<script>
    $("#btnCancel").click(function () {
        $("#cmdName")[0].value = "AttributeDetail";


    });
    $("#btnUpdate").click(function () {
        $("#cmdName")[0].value = "viewPlaceHolder";


    });
    function onBegin() {
        $('#divLoading').show();

    }
    function onSuccess(result, path) {
        $('#lblSearchWarnings').html("");
        var fileId = $('#cmdName').val();
        if (result.indexOf("export") == 0) {

            //window.location.href = 'MPP/Update/Download?path=' + result;
            window.location.href = 'Update/Download?path=' + result;

            alert("Please refer downloaded file for rejected records");

        }
        else if (result.indexOf("error") == 0) {

            $('#lblSearchWarnings').html(result.replace("error", ""));

        }
        else if (result.indexOf("success") == 0) {

            alert("Data Save Successfully");


            $.post('@Url.Action("ShowAttribute", "Menu")', { entityTypeId: '@Context.Session.GetInt32("EntityTypeID")', entityName: '@Context.Session.GetString("EntityName")', viewType: "search" },
                function (data) {
                    if (data.indexOf("Access denied") > -1) {
                        alert(data);
                    }
                    else {
                        $('#AttributeDetail').empty();

                        $('#AttributeDetail').html(data);

                        $('#lblcaption').html('@Context.Session.GetString("EntityName")');
                        $('#viewPlaceHolder').empty();
                    }

                });

        }
        else {
            //  $('#AttributeDetail').empty();
            $.post('@Url.Action("ShowAttribute", "Menu")', { entityTypeId: '@Context.Session.GetInt32("EntityTypeID")', entityName: '@Context.Session.GetString("EntityName")', viewType: "search" },
                function (data) {
                    if (data.indexOf("Access denied") > -1) {
                        alert(data);
                    }
                    else {
                        $('#AttributeDetail').empty();

                        $('#AttributeDetail').html(data);

                        $('#lblcaption').html('@Context.Session.GetString("EntityName")');
                        $('#viewPlaceHolder').empty();
                    }

                });
        }

    }
    function onFailure(error) {
        alert(error);

    }
    function onComplete() {
        $('#divLoading').hide();
    }
</script>

@if (ViewData.ModelState.IsValid)
{
    <form id="formid">

        <div class="card-header">
            <h5 class="mb-0">Update @Context.Session.GetString("EntityName").ToString()</h5>
        </div>
        <div class="card-body">
            <div class="row form-group">
                @*  <table border="1" cellspacing="0" cellpadding="0" class="width-100 inputFormDtls">
            <tr>
            <td> *@

                @foreach (var menuOption in Model)
                {
                    if (@menuOption.Isvisible != "N")
                    {
                        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            <label>@menuOption.AttrDisplayName</label>
                            @if(@menuOption.AttrDisplayName.ToUpper() == ("SORT ORDER"))
                            {
                            <label id="lblSORT_ORDER_format" class="hintlabel">(9999999999)</label>
                            }
                            @switch (@menuOption.DisplayType.ToLower())
                            {
                                case "textbox":
                                    @*@Html.TextBoxFor(m=> @menuOption.ENTITY_TYPE_ID, new { @class = "width-40" })*@
                                    <input type="text" class="form-control" maxlength=@menuOption.AttrLength name=@menuOption.AttrName id=@menuOption.AttrName />
                                    break;
                                case "datepicker":
                                    <input type="text" name=@menuOption.AttrName id=@menuOption.AttrName class="form-control datepicker" />

                                    break;
                                case "checkboxlist":
                                    foreach (var data in menuOption.dropDownDataList)
                                    {
                                        var chkname = data.VALID_VALUES;

                                        @Html.CheckBox(@menuOption.AttrName)
                                        @data.VALUE_NAME.Substring(0, 1).ToUpper()

                                        @data.VALUE_NAME.Substring(1).ToLower()
                                        ;

                                    }
                                    break;
                                case "combobox":
                                    <select id="@menuOption.AttrName" name="@menuOption.AttrName" class="form-control">
                                        <option value="">--Select--</option>
                                        @foreach (var item in @menuOption.dropDownDataList)
                                        {
                                            <option value="@item.VALID_VALUES">@item.VALUE_NAME</option>
                                        }
                                    </select>
                                    break;
                                default:
                                    break;
                            }
                        </div>

                    }
                }

                <div class="col-xs-12 col-sm-4 col-md-4 mt-3">
                    <label>Effective Date </label>
                    <label style="color:red">*</label>

                    <input type="text" class="form-control" name="txtEffectiveDate" id="txtEffectiveDate" />

                </div>

                @*  </td>
            </tr>

            </table> *@
            </div>
            <div class="row">
                <div class="col">
                    <button type="submit" class="btn btn-primary" id="btnUpdate" name="Command" value="update">
                        Update
                    </button>
                    <button type="submit" class="btn btn-outline-primary" id="btnCancel" name="Command" title="Cancel" value="Cancel">
                        Cancel
                    </button>
                    <div style="color:red" id="lblSearchWarnings"></div>
                </div>
            </div>
        </div>


        <div id="divLoading" class="loader">

            <img alt="Loading, please wait" style="position: absolute; top: 30%; left: 45%; width:110px; height:110px" src="~/Images/spinner.gif" />
        </div>
    </form>
}
else
{
    <script>

        alert('Accesss denied');

    </script>
}

<script>
    $(document).ready(function () {
        $(function () {
            $("#txtEffectiveDate").datepicker({ changeMonth: true, changeYear: true, yearRange: "2000:2050" });
        });
    });
    $('#formid').on('submit', submitFormWithAjax);

    function submitFormWithAjax(event) {
        event.preventDefault();
        let commandValue = $(document.activeElement).attr("value");
        // Declare an object to store the form data
        let form = {};

        // Loop through form elements and collect the data
        $('#formid input, #formid select').each(function () {
            form[$(this).attr('name')] = $(this).val();
        });
        form['Command'] = commandValue;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdateSelectedRecords", "Update")',
            data: form,
            success: function (data) {
                // Update your DOM based on the received data.
                onSuccess(data);
            },
            error: function (err) {
                console.error("Error", err);
            }
        });
    }

</script>

