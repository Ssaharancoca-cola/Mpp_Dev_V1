@model List<Model.Entity_Type_Attr_Detail>

<form id="formid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb rounded-3">
            @if (Context.Session.GetString("SelectedDimensionData") != null && Context.Session.GetString("EntityName") != null)
            {
                <li class="breadcrumb-item">
                    <a class="link-body-emphasis" href="#">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house-door" viewBox="0 0 16 16">
                            <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4z" />
                        </svg>
                        <span class="visually-hidden">Home</span>
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a class="link-body-emphasis fw-semibold text-decoration-none" href="#">@Context.Session.GetString("SelectedDimensionData").ToString()</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    @Context.Session.GetString("EntityName").ToString()
                </li>
            }
        </ol>
    </nav>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
        <h1 class="h2">@Context.Session.GetString("EntityName").ToString()</h1>
    </div>
    <div class="card box-shadow">
        <div class="card-header">
            <h5 class="mb-0">Add New</h5>
        </div>
        <div class="card-body">
            <table width="100%" border="0" cellspacing="2" cellpadding="0">
                @foreach (var menuOption in Model)
                {

                    if (@menuOption.Isvisible != "N")
                    {
                        <tr style="width: 100%;padding-top:10px">
                            <td style="width: 50%;padding-left:270px;">
                                @menuOption.AttrDisplayName
                            </td>
                            <td style="width: 50%" align="left">

                                @switch (@menuOption.DisplayType.ToLower())
                                {
                                    case "textbox":
                                        <input type="text" class="SortButton" style="width:45%" maxlength=@menuOption.AttrLength name=@menuOption.AttrName id=@menuOption.AttrName />
                                        if (@menuOption.IsMandatoryFlag == 1)
                                        {
                                            <label style="color:red">*</label>

                                        }

                                        break;
                                    case "datepicker":
                                        <input type="text" style="width:45%" name=@menuOption.AttrName id=@menuOption.AttrName class="datepicker" />

                                        if (@menuOption.IsMandatoryFlag == 1)
                                        {
                                            <label style="color:red">*</label>

                                        }

                                        break;
                                    case "checkboxlist":
                                        foreach (var data in menuOption.dropDownDataList)
                                        {
                                            var chkname = data.VALID_VALUES;
                                            @Html.CheckBox(@menuOption.AttrName)
                                            @data.VALUE_NAME.Substring(0, 1).ToUpper()

                                            @data.VALUE_NAME.Substring(1).ToLower()
                                            ;

                                        }
                                        if (@menuOption.IsMandatoryFlag == 1)
                                        {
                                            <label style="color:red">*</label>

                                        }
                                        break;

                                    case "combobox":
                                        <select id="@menuOption.AttrName" name="@menuOption.AttrName" style="width: 45%;">
                                            <option value="">--Select--</option>
                                            @foreach (var item in @menuOption.dropDownDataList)
                                            {
                                                <option value="@item.VALID_VALUES">@item.VALUE_NAME</option>
                                            }
                                        </select>
                                        <label style="color:red">*</label>
                                        break;
                                    case "parcombo":
                                        @Html.DropDownListFor(m => @menuOption.EntityTypeId, new SelectList(@menuOption.dropDownDataList, "VALID_VALUES", "VALUE_NAME"), "--Select--", new { @id = @menuOption.AttrName, @Name = @menuOption.AttrName, style = "width: 45%; ", @onchange = "CallChangefunc('" + menuOption.CasDrop + "',this.value)" })
                                        if (@menuOption.IsMandatoryFlag == 1)
                                        {
                                            <label style="color:red">*</label>

                                        }
                                        break;

                                    case "cascombo":
                                        @Html.DropDownList(@menuOption.AttrName, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @style = "width:45%;" })
                                        if (@menuOption.IsMandatoryFlag == 1)
                                        {
                                            <label style="color:red">*</label>

                                        }
                                        break;
                                    case "userbox":
                                        <input type="text" class="SortButton" style="width:45%" maxlength=@menuOption.AttrLength name=@menuOption.AttrName id=@menuOption.AttrName />
                                        if (@menuOption.IsMandatoryFlag == 1)
                                        {
                                            <label style="color:red">*</label>

                                        }
                                        break;

                                    default:
                                        break;
                                }
                            </td>
                        </tr>
                    }
                }
                <tr style="width: 100%;padding-top:10px">
                    <td style="width: 50%;padding-left:270px;">Effective Date</td>
                    <td style="width: 50%" align="left">
                        <input type="text" class="SortButton datepicker" style="width:45%" name=txtEffectiveDate id=txtEffectiveDate @*readonly="readonly"*@ />
                    </td>
                </tr>
                <tr align="center" style="width: 100%; display:none" class="pageheadernfooter">
                    <td style="width: 50%" align="right"></td>
                    <td style="width: 50%" align="left">
                        <input type="text" class="SortButton" style="width:45%" name="txtEditLevel" id="txtEditLevel" />
                    </td>
                </tr>
                <tr align="center" style="width: 100%">
                    <td style="width: 50%" align="right"></td>
                    <td style="width: 50%" align="left">
                        <button type="submit" class="button" id="btnSave" name="Command" value="Save" title="Save" style="width:75px; margin-right:30px;"><img src="~/Images/Save.png" alt="Save" /></button>
                        <button type="submit" class="button" id="btnCancel" name="Command" value="Cancel" title="Cancel" style="width:75px;"><img src="~/Images/Cancel.png" alt="Cancel" /></button>

                    </td>
                </tr>
                <tr align="center" style="width: 100%;">
                    <td colspan="2" style="width: 100%" align="center">
                        <div style="color:red" id="lblErrorMsg"></div>

                    </td>
                </tr>

            </table>
        </div>
    </div>
    
    <script>
        $(function () {
            $("#txtEffectiveDate").datepicker({ changeMonth: true, changeYear: true, yearRange: "2000:2050" });

        });
    </script>
    <div id="divLoading" class="loader">
        <img alt="Loading, please wait" style="position: absolute; top: 30%; left: 45%; width:110px; height:110px" src="~/Images/spinner.gif" />
    </div>   

</form>
<input type="hidden" id="cmdName" name="cmdName" value="displayMessage" />

<div id="displayMessage"></div>

<script>
    function onBegin() {
        $('#divLoading').show();

    }
    function onSuccess(result) {
        if (result.length > 1000) {
            var fileId = "AttributeDetail";
            $('#' + fileId).html(result);

        }
        else {
            if (result.indexOf("error") == -1) {                
                alert("Data Save Successfully");
                $.post('@Url.Action("ShowAttribute", "Menu")', { entityTypeId: '@Context.Session.GetInt32("EntityTypeID")', entityName: '@Context.Session.GetString("EntityName")', viewType: "search" },
                    function (data) {
                        if (data.indexOf("Access denied") > -1) {
                            alert(data);
                        }
                        else {
                            $('#AttributeDetail').empty();

                            $('#AttributeDetail').html(data);

                            $('#lblcaption').html('@Context.Session.GetString("EntityName")');
                            $('#viewPlaceHolder').empty();
                        }

                    });
            }
            else
                alert(result.replace("error", ""))
        }
    }


    function onComplete() {
        $('#divLoading').hide();
    }
</script>

<script>
    $(document).ready(function () {
        $('#formid').on('keyup keypress', function (e) {
            var keyCode = e.keyCode || e.which;
            if (keyCode === 13) {
                e.preventDefault();
                return false;
            }
        });
        $("#btnCancel").click(function () {
            $("#cmdName")[0].value = "AttributeDetail";
            $('#viewPlaceHolder').empty();

        }); 
     
    });
   
    $('#formid').on('submit', submitFormWithAjax);


    function CallChangefunc(val, parcombo) {
        $('#' + val + '').empty();

        //alert(parcombo);

        $.ajax({
            type: "POST",
            url: "Search/GetCasCombo",
            datatype: "Json",
            data: { Id: parcombo, cId: val },
            success: function (data) {
                $('#' + val + '').append('<option value="">--Select--</option>');
                $.each(data, function (index, value) {
                    $('#' + val + '').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
    };

    function submitFormWithAjax(event) {
        event.preventDefault();
        let commandValue = $(document.activeElement).attr("value");
        // Declare an object to store the form data
        let form = {};

        // Loop through form elements and collect the data
        $('#formid input, #formid select').each(function () {
            form[$(this).attr('name')] = $(this).val();
        });
        form['Command'] = commandValue;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("SaveRecord", "AddNewRecord")',
            data: form,
            success: function (data) {
                // Update your DOM based on the received data.
                onSuccess(data);
            },
            error: function (err) {
                console.error("Error", err);
            }
        });
    }

</script>

